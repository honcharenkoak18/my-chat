'use strict';
const routes = function (app, passport, io) {
  app.get('/test', (req, res) => {
    const isAuthenticated = !!req.user;
    if (isAuthenticated) {
      console.log(`user is authenticated, session is ${req.session.id}`);
    } else {
      console.log('unknown user');
    }
    res.send(
      JSON.stringify({
        auth: isAuthenticated ? 'isAuthenticated' : 'not Authenticated',
      })
    );
  });

  /** /login */
  app.post('/login', passport.authenticate('local'), function (req, res) {
    // If this function gets called, authentication was successful.
    // `req.user` contains the authenticated user.
    res.send(JSON.stringify(req.user));
  });

  app.post('/logout', (req, res) => {
    console.log(`logout ${req.session}`);
    const socketId = req.session.socketId;
    if (socketId && io.of('/').sockets.get(socketId)) {
      console.log(`forcefully closing socket ${socketId}`);
      io.of('/').sockets.get(socketId).disconnect(true);
    }
    req.logout();
    res.cookie('connect.sid', '', { expires: new Date() });
    res.redirect('/');
  });
};

module.exports = routes;
